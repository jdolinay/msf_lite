MSF lite

Poznamka z AVR:
Projekty examples staci .cproject a .project a slozka .settings jak mam ted - overeno v eclipse ze
po importu jako existing project into workspace ( bez kopirovani do workspace) jde prelozit.
------------------------------------------------

7.7.2014
Vytvoreny templates pro modul a pro cmsis driver...

4.7.2014
TODO: v tpm driveru asi neni potreba mit 6 pinu pro tpm1 a 2, viz ukazalo se ze kod
musi testovat skutecne dostupny pocet -> undefined piny odstatnit.
 

26.6.2014
TODO: definovat si coding standard pro MSF/msf_lite asi podle Ganssle i kdyz 
 on vyzaduje aaa_boo a CMSIS i knizka embedded pouziva aaaBoo.
 >podivat i na CMSIS standard - pouziva misra2004 + velmi strucne poznamky na uvodni strane
 pod "coding rules".
 
 > nedelat podrobne
 > neni moc dobry "kockopec" kdy cmsis-like funkce jsou initNeco a global jsou init_neco
 ale zase asi C-styl s _ je dobry... nevim_?
 > misra2004 viz mcu\informace
 
_TODO: udelat (viz standard ganssle) template file pro zdrojaky - hodilo by se mi pro ovladace CMSIS-like.
  
 
24.6.2014
Pokracuj: otestovat aW, 
     - analogWrite funguje ok na všech pinech testováno kromì 90 % a více které malý scope nezvládá :(
     - testovano i pro 8 kHz PWM ok.
     
TODO: + high level msf pwm/ic/oc driver abych mel neco pro advanced pouziti.
TODO: + asi i SPI driver pred release, mozna i touch slider? 
- analogWrite hotovo, otestovat.
TODO: otestovat TPM driver pro inpuit capture mode - mam napsano.
TODO: otestovat TPM driver pro output compare mode - mam napsano.

REMEM: vyhoda proti Arduino: prakticky vsechny piny jde pouzit pro PWM, viz arduino.c
 + nastavitelna freq vystupu az 32 kHz v msf_config.h 

23.6.2014
_Pokracuj: dodelat analogWrite + driver status viz nize
_TODO: TPM driver asi getStatus viz analogWrite bude potrebovat.
 >zatim neresit; pamatovat si bude arduino fce co uz nastavila.
 
REMEM: moje reseni analogWrite
Nastavuji casovace pri inicializaci tak, abych mohl zapisovat primo 0-255 do
kanalu. Pak vyjde pwm frekvence 488 Hz.
Neresim zadne nastavovani apod. rozsirovanim arduino-like API, radeji odkazu 
na nativni MSF driver!
Pozor uzivatel by nemel kombinovat analogWrite a pouziti napr. TPM driveru primo,
resp. muze ale opatrne. Spise doporuceni: pro basic funkcionalitu muze pouzit 
analogWrite, pro narocnejsi zapomen na analogWrite a pouzij MSF primo :)
END REMEM 

REMEM: duvod proc arduino digitalRead/write vypina timer je asi to,
ze po analogWrite se dany pin spoji s vystupem casovace a jak jej
pak prepnout zpet na GPIO?
 > pro msf logicky volanim pin_mode - to nastavi jako vstup/vystup a pritom
 i prepne MUX na gpio.
END REMEM

20.6.2014
_Pokracuj: otestovat instance driveru...
_TODO: udelat instance pro TPM1 a TPM2 at overim vice instanci driveru :)
 > ty maji vystup na pin red a green led...
 
_TODO: piny pro timer driver asi do nìjakého config.h, ve zdrojáku jen symbol jména
napø. TPM0_CH1_PIN + i cislo alt funkce? neob to osetrit automaticky v nejakem H "pod tim".
 > auto nema smysl, stejne se musi divat na pinout kdyz vybira pin = napise uzivatel.

REMEM: konfigurace pinu pro TPM viz msf_config.h v projektu uart.
Pro ADC je nejaka konfigurace v msf_config_<device>.h ale to je nastaveni
default hodnot pro Init, napr. rozliseni a kolik vzorku prumerovat, toto
neni potreba bezne menit.
END REMEM 

19.6.2014
Pokracuj: test PWM apod...
- funguje normalni tof mode a nastaveni MOD;
TODO: chovani pri externim clocku; v driveru cekam nez je "anknowledged" zakaz citace pred zmenami
napr. v Control, ale kdyby nebyl externi clock (napr. chci citat jen pulsy, vytuhne to na cekani?)
 > pro int clock nefungovalo pri rychlem projeti kodu a fungovalo pri krokovani, protoze zmena
 v SC se nestihla projevit a CPU uz zapsalo nove hodnoty ...asi.

18.6.2014
Pokracuj: otestovat tpm v tof modu a mozna pwm- co uz mam.... pak dalsi mody...
- zaklad tpm driveru hotov.

REMEM: overlay struktura pro TPMn obsahuje "reserved" bloky", protoze adresy registru 
nejsou vsechny hned za sebou. To ale neznamena plystvani pameti, protoze nas "objekt"
napr. TPM0 je jen ukazatel na zacatek bloku "pameti" kde jsou mapovany registry TPM0
a nezabira zadnou RAM. 

16.6.2014
- Nastavovani parity odladeno ok, ale testovani je slozite, musi byt v terminalu 7-data bits 
(UART generuje paritni jako 8. bit). Pro 8 datovych bitu by musel byt uart v modu 
9-bit.
- pridana podpora pro 9-datovy bit do uart driveru aby mohla byt parita + 8 datovych.
nepodporuji ale posilani/prijem 9 datovych bitu.
- V terminalu se neda poradne testovat, zobrazuje ok s jakoukoliv paritou i bez ni a
 stop bity taky asi ignoruje..

13.6.2014
_Pokracuj: nefunguje ted UART driver, po zmenach v init a control pro paritu
 viz pridano nulovani registru, to je ale asi nutne viz init v msf_init na interupt
 a pak prepnuti na polled bude mit povolene interupty.
Pokracuj: navrh api pro pwm driver az pak analogWrite.

12.6.2014
Pokracuj: analogWrite, jinak uz arduino layer asi komplet ok.
 >je analogwrite v arduino pres HW kde to jde nebo vsude SW.
- Serial funguje, otestovan v arduino_blink

TODO: testovat msf_print funkce po uprave na coniob.
_TODO: do uart driveru dat nastaveni start/stop bitu jak potøeba pro arduino.
 > nastaveni datovych bitu a stop bitu done.
 > nastaveni 8,9,10 dat bitu nebudu delat, je komplikovany pak prijem i vysilani (=vice nez byte dat najednou.)
- v Serial nema cenu pouzivat msf funkce, jen primo coniob, protoze pak vznika mix,
kdy neco jde pres msf, neco pres conio a neco primo na driver (ne vse je v conio API).

11.6.2014
Stav ConioB:
- opustena verze s odesilanim vicebajtovych bloku najednou, odesila se byjt po bajtu
v obsluze udalosti od UART driveru. Vysvetleni viz komentar v git commit. Rozdelana
verze na branch. Pokud bych chtel nekdy udelat, pak volit vlastni buffer a nevyuzivat
makra pro ring buffer. 
- funguje odeslani vice stringu tesne za sebou
_Pokracuj: otestovat prijem a  odesilani jednotlivych znaku v coniob...

TODO: (low) -V sesite MCU mam vyvojaky jak udelat s vlastnim bufferem misto FIFO,
zda se ne moc tezke a fungujici.

REMEM: Prinos projektu "Arduino na FRDM" vidim v tom:
- ze je to dalsi HW podobny jako Teensy s vykonnym MCU, ktery by sel programovat
jako Arduino. I kdyz neplanuju pridani do arduino IDE a tedy cilem jsou spis 
zkusenejsi uzivatele, je to uzitecne.
- sw knihovna bude navrzena vrstvene, koncepcne a snadno portable. (MSF) mohla by
nahradit Arduino knihovny pro zkusenejsi uzivatele :)
END REMEM


REMEM: K reziim pri odesilani pres UART:
CPU pri 8 MHz = 8 clock / us
Pro 9600: 1 znak za 104 us. = 832 clocks
Pro 115200: 1 znak =  8.7 us =   69 clocks
Pro CPU 48 MHz = 48 clock / us
Pro 9600: 1 znak za 104 us. = 5000 clocks
Pro 115200: 1 znak =  8.7 us =   417 clocks
Zaver: pro velke F_CPU, napr. 48 MHz se vyplati na pozadi i kdyz vysilam po 
1 znaku.
END REMEM

10.6.2014
_pokracuj: conioB vysilani...
_TODO: upravit UART driver aby dokazal soucasne prijimat a vysilat, pro ConioB chci ab
na pozadi stale prijimal a pritom abych mohl vysilat...
- rozhodunuto udelat "buffered conio", protoze chci mit i pro programatorske pouziti, nejen 
s "arduino" api...

REMEM: K implementaci buffered conio s ring buffer (FIFO):
Vidim 2 moznosti jak spojit buffers s UART_Driver v interrupt modu:
1) volat UART.Receive(buf,1) a v callback udealt PUSH do FIFO
2) volat UART.Receive(buf, velikost_FIFO) a nechat driver aby na poradi plnil
buffer i kdyz o tom logika FIFO nic nevi. V conio_getch pak pomoci UART.GetRxCount
zjistit kolik mam polozek ve FIFO a nastavit na ni hodnotu pred ctenim.
END REMEM

9.6.2014
_Pokracuj: conio s bufferem ? zvlast nebo jako rozsireni?
 > spis rozsireni funkce a pridani bufferu? - ne, chci i pro jine ucely coniob. 

_TODO: resit zmenu baudrate pro conio resp UART driver, viz msf_init nastavi napr. 
9600 prez initialize a ja pak chci pro serial.begin zmenit.
 + chce to mit moznost v conio driveru nastavit.
 > uart driver uz umi, testovano.  
- UART driver funguje.

6.6.2014
_Pokracuj: odladit uart example; nefunguje prijem znaku na pozadi podruhe, prvni prijem ok, pak se "zacyklil" v ISR.
REMEM: pouziti uart v int modu je nepohodle pro normalni aplikaci, napr. nemuze 
udelat 2x hned za sebou Send nebo Send a hned receive...
REMEM: (pro MSF) driver jako uart s prijmem na pozadi je asi zbytecne narocny na pamet pro simple 8-bit pouziti,
problem jak poskytovat jednoduchy pro napr. MCU s 4KB flash a full-featured pro MCU s 60 KB flash.
mozna jednoduchy C jako jsem mel a nad tim CMSIS-like volajici jeho funkce kde to jde?
 > nevyhne se 2x psat stejny kod resp. 2 ovladace pro totez :()
> LEPSI asi "option" pro implementatory MSF zda zvoli "simple" driver API nebo FULL.

5.6.2014
_Pokracuj: tx pro int mode a testovat! + ABORT RX A TX DO CONTROL...
_TEST: UART driver nastaveni baud a int/polled mode.
_TODO: uart/serial musi mit buffer. UART driver dle CMSIS kazdy send/receive dela pres buffer =data od uzivatele.
 - mozna do conio buffer?
 

4.6.2014
_TODO: dodelani Serial + otestovani analog funkci, casovacich a serial.
> Serial v arduino umi i paritu a datove bity :(
_TODO: v conio driveru nacteni stringu? msf_read_str() krome read_char (?)
 > mam viz conio_gets() 
TODO: testovat analog Reference()
_TODO: resim nejak v gpio pouziti analog input pinu jako digital = prepinam funkci pinu?
 - co kdyz pin je pro UART; jak pak pouziju pro GPIO.
 - Ano, gpio_direction si nastavuje mux na GPIO mode.

3.6.2014
_Pokracuj: analogRead + pridat do ADC driveru nastaveni reference.
- ok projekt pro arduino s blikanim LED :)

2.6.2014
_Pokracuj: doresit arduino.h a jeho preklad, pak example pro arduino (asi novy projekt) 
_TODO: v postupu vytvoreni projektu vyuzit nove templates slozku s upravenymi soubory..

30.5.2014
Pokracuj: blink dodelat s definicemi board pinu - toto bude v aktualnim projektu = example na MSF...
_TODO: piny v msf_kl25z.h aktualizovat i do MSF verze!

29.5.2014
_Pokracuj: doresit preklad blink za soucasne tvorby navodu v cw10_howto.txt
Vytvoren example project blink (workspace moje v doc ale lokace projektu je v msf_lite\examples...),

REMEM: k Arduino wrapperu
Zakladni filozofice je umoznit zacatecnikum pouzit zname arduino funkce, ale smerovat
je stejne na nativni MSF C-API. Tedy nema smysl implementovat slozite funkcnosti z Arduina,
jako je Serial.find(), radeji nasmerovat uzivatele na jejich nativni ekvivalent.
END REMEM

REMEM: k "template" projektum v Eclipse= CW
Existují viz http://help.eclipse.org/kepler/index.jsp?topic=%2Forg.eclipse.cdt.doc.isv%2Fguide%2FprojectTemplateEngine%2FHowtoregistertemplates.html
od CDT 4.0, pøitom cw 10.5 má prý CDT 8.x, ale nevím...
Registrace je složitá pøes vytváøení plugin projektu.
Nevím jestli snadno jde když potøebuji "naklonovat" projekt CW wizarda ktery je dost složitý.
TIP: jde exportovat project settings pres Export > C/C++ > Export project settings.
END REMEM


REMEM: filozofie Receive funkce v CMSIS driveru pro UART
Uzivatel zavola Receive a preda buffer + kolik znaku chce nacist. Funkce hned
vrati (je non-blocking) a na pozadi nacita s vyuzitim DMA nebo INT.
Po prijeti pozadovaneho poctu znaku vola callback = generuje udalost ARM_USART_EVENT_RECEIVE_COMPLETE.
Jde zjistit aktualni pocet nactenych pres ARM_USART_GetRxCount()
END REMEM

///////////////////////////////////////////////////////
Zmenene soubory, ktere synchronizovat do MSF:
(po synchronizaci zde zaznam smazat)
- msf_mkl25z.h
